'''
Write a Python program for department library which has N books, write functions for 
following:
a) Delete the duplicate entries
b) Display books in ascending order based on cost of books
c) Count number of books with cost more than 500. 
d) Copy books in a new list which has cost less than 500.
'''
print(__doc__)


class Book:
    def __init__(self, title, author, cost):
        self.title = title
        self.author = author
        self.cost = cost

def delete_duplicates(books):
    unique_books = []
    for book in books:
        if book not in unique_books:
            unique_books.append(book)
    return unique_books

def display_books_in_ascending_order(books):
    sorted_books = sorted(books, key=lambda x: x.cost)
    for book in sorted_books:
        print(f"{book.title} by {book.author} - rs.{book.cost}")

def count_expensive_books(books):
    count = sum(1 for book in books if book.cost > 500)
    return count

def copy_cheap_books(books):
    cheap_books = [book for book in books if book.cost < 500]
    return cheap_books

def get_book_input():
    title = input("Enter the title of the book: ")
    author = input("Enter the author of the book: ")
    cost = float(input("Enter the cost of the book: "))
    return Book(title, author, cost)

if __name__ == "__main__":
    num_books = int(input("Enter the number of books: "))

    books = []
    for i in range(num_books):
        print(f"\nEnter details for book {i + 1}:")
        book = get_book_input()
        books.append(book)


    unique_books = delete_duplicates(books)

    print("\nBooks in ascending order based on cost:")
    display_books_in_ascending_order(unique_books)

    expensive_books_count = count_expensive_books(unique_books)
    print(f"\nNumber of books with cost more than 500: {expensive_books_count}")

    cheap_books = copy_cheap_books(unique_books)
    print("\nBooks with cost less than 500:")
    for book in cheap_books:
        print(f"{book.title} by {book.author} - ${book.cost}")
